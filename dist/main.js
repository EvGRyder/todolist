(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(15),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"#book {\n    background-color: blue;\n}\n\nbutton {\n    background-color: blue;\n}\n\n#layout {\n    background-color: magenta;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["#book {\n    background-color: blue;\n}\n\nbutton {\n    background-color: blue;\n}\n\n#layout {\n    background-color: magenta;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&r[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}e.exports=function(e){var n,o,r=(o=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,r,a=[],i=!0,c=!1;try{for(n=n.call(e);!(i=(o=n.next()).done)&&(a.push(o.value),!t||a.length!==t);i=!0);}catch(e){c=!0,r=e}finally{try{i||null==n.return||n.return()}finally{if(c)throw r}}return a}}(n,o)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,n):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],i=r[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(l," */"),s=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[a].concat(s).concat([d]).join("\n")}return[a].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=o.base?l[0]+o.base:l[0],s=a[d]||0,u="".concat(d," ").concat(s);a[d]=s+1;var p=n(u),m={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(t[p].references++,t[p].updater(m)):t.push({identifier:u,updater:r(m,o),references:1}),i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var l=o(e,r),d=0;d<a.length;d++){var s=n(a[d]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o=n.css,r=n.media,a=n.sourceMap;r?e.setAttribute("media",r):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{const e=(e,n,o,r)=>{let a={title:e,description:n,dueDate:o,priority:r},i=t(e,n,r,o,(()=>{i.parentElement.removeChild(i)}));return{TodoHTML:i,todoData:a}},t=(e,t,n,o,r)=>{let a=document.createElement("div");a.style.display="flex",a.style.justifyContent="space-between",a.style.height="35px",a.style.backgroundColor="grey",a.style.marginBottom="4px",a.style.padding="5px";let i=document.createElement("div");i.textContent=e,a.appendChild(i);let c=document.createElement("div");c.textContent=t,a.appendChild(c);let l=document.createElement("div");l.textContent=n,a.appendChild(l);let d=document.createElement("div");d.textContent=o,a.appendChild(d);let s=document.createElement("button");return s.textContent="remove",a.appendChild(s),s.addEventListener("click",r),a},o=(()=>{const e=document.createElement("div");return e.id="book",e.style.width="auto",e.style.height="100%",e.style.borderTop="solid",e.style.padding="5px",e})(),r=(()=>{let e=[];return{List:e,TodoListHTML:o,addTodo:t=>{e.push(t.todoData),styleTodoList.appendChild(t.todoHTML)},populateNotepad:e=>{for(let t=0;t<e.length;t++)a.appendChild(e[t].TodoHTML)}}})(),a=r.TodoListHTML;let i=[e("Todo",!0,!0,"HIGH"),e("Todo 2: Electric Boogaloo",!1,!1,"low")];r.populateNotepad(i);const c=(()=>{let e="Project Name";const t=document.createElement("main"),n=document.createElement("h1");n.textContent=e,t.style.display="flex",t.style.flexDirection="column",t.style.width="100%",t.style.height="100%",t.appendChild(n);let o=r.TodoListHTML;return t.appendChild(o),{content:t,setProjectName:t=>{e=t,n.textContent=e}}})();let l=r.populateNotepad,d=c.setProjectName,s=r.TodoListHTML,u=[],p=(t=>{let n=e("aaa",s),o=e("eeeeeee",s),r="Test Project 2",a=[n,o];const i=document.createElement("div");return i.textContent=r,i.style.backgroundColor="white",i.addEventListener("click",(()=>{l(a),d(r)})),{projectHTML:i,addTodo:e=>todos.push(e),todoList:a,projectName:r}})();u.push(p),console.log(u[0]);let m=u[0];const f=(()=>{let e=u;const t=document.createElement("nav");t.style.display="flex",t.style.flexDirection="column",t.style.backgroundColor="yellow",t.style.borderRight="solid",t.style.height="100%",t.style.width="150px";const n=document.createElement("div");n.textContent="LOGO";const o=document.createElement("div"),r=document.createElement("button");r.textContent="add project",r.addEventListener("click",(()=>a(m))),t.appendChild(n),t.appendChild(o),t.appendChild(r);let a=t=>{e.push(t),o.appendChild(t.projectHTML)};return{SidebarHTML:t,addProject:a,projectList:e}})(),h=(()=>{const e=document.createElement("div");e.id="Layout",e.style.display="flex",e.style.height="100%";const t=f.SidebarHTML;return e.appendChild(t),e.appendChild(c.content),e})();var y=n(379),v=n.n(y),b=n(795),g=n.n(b),C=n(569),A=n.n(C),x=n(565),T=n.n(x),E=n(216),L=n.n(E),j=n(589),M=n.n(j),w=n(426),k={};k.styleTagTransform=M(),k.setAttributes=T(),k.insert=A().bind(null,"head"),k.domAPI=g(),k.insertStyleElement=L(),v()(w.Z,k),w.Z&&w.Z.locals&&w.Z.locals,document.querySelector("html").style.height="100%";let I=document.querySelector("body");I.style.height="100%",I.style.margin="0px";const S=document.getElementById("page");S.style.height="100%",S.appendChild(h)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,